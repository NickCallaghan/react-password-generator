{"version":3,"sources":["charSets.js","Password.js","App.js","index.js"],"names":["charSets","upper","lower","special","Password","length","nums","this","options","value","generatePassword","password","char","generateX","Math","floor","random","num","Error","chars","randomFromCharSet","App","state","copyToClip","navigator","clipboard","writeText","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","handleGenerate","a","async","pwLength","setState","handleChangeLength","event","handleToggle","target","id","disableButton","className","onChange","min","max","step","checked","disabled","label","tooltip","data-control","onClick","newestOnTop","rtl","pauseOnVisibilityChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8UA4FeA,EA5FE,CACfC,MAAO,CACL,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEFC,MAAO,CACL,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEFC,QAAS,CACP,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MCeWC,E,WAnGb,aAMG,IALDC,EAKA,uDALS,GACTJ,IAIA,yDAHAC,IAGA,yDAFAC,IAEA,yDADAG,IACA,6EACAC,KAAKC,QAAU,CACbP,QACAC,QACAC,UACAG,OACAD,UAEFE,KAAKE,MAAQF,KAAKG,mB,4DAKlB,OAAIH,KAAKF,QAAU,I,mCAMRJ,EAAOC,EAAOI,EAAMH,GAE/B,SAAKF,IAAUC,GAASI,IAASH,K,yCASjC,IAFA,IAAME,EAASE,KAAKC,QAAQH,OACxBM,EAAW,GACRA,EAASN,OAASA,GAAQ,CAC/B,IAAMO,EAAOL,KAAKM,YACdD,IACFD,GAAYC,GAGhB,OAAOD,I,kCAKP,OAFqBG,KAAKC,MAAsB,EAAhBD,KAAKE,WAGnC,KAAK,EACH,IAA0B,IAAtBT,KAAKC,QAAQF,KACf,OAAOC,KAAKU,MAEd,MACF,KAAK,EACH,IAA2B,IAAvBV,KAAKC,QAAQP,MACf,OAAOM,KAAKN,QAEd,MACF,KAAK,EACH,IAA2B,IAAvBM,KAAKC,QAAQN,MACf,OAAOK,KAAKL,QAEd,MACF,KAAK,EACH,IAA6B,IAAzBK,KAAKC,QAAQL,QACf,OAAOI,KAAKJ,UAEd,MACF,QACE,MAAM,IAAIe,MAAM,6B,wCAIJC,GAEhB,OAAOA,EADQL,KAAKC,MAAMD,KAAKE,SAAWG,EAAMd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","file":"static/js/main.93126ea1.chunk.js","sourcesContent":["const charSets = {\n  upper: [\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"G\",\n    \"H\",\n    \"I\",\n    \"J\",\n    \"K\",\n    \"L\",\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",\n    \"T\",\n    \"U\",\n    \"V\",\n    \"W\",\n    \"X\",\n    \"Y\",\n    \"Z\"\n  ],\n  lower: [\n    \"a\",\n    \"b\",\n    \"c\",\n    \"d\",\n    \"e\",\n    \"f\",\n    \"g\",\n    \"h\",\n    \"i\",\n    \"j\",\n    \"k\",\n    \"l\",\n    \"m\",\n    \"n\",\n    \"o\",\n    \"p\",\n    \"q\",\n    \"r\",\n    \"s\",\n    \"t\",\n    \"u\",\n    \"v\",\n    \"w\",\n    \"x\",\n    \"y\",\n    \"z\"\n  ],\n  special: [\n    \"!\",\n    '\"',\n    \"#\",\n    \"$\",\n    \"%\",\n    \"&\",\n    \"(\",\n    \")\",\n    \"*\",\n    \"+\",\n    \",\",\n    \"-\",\n    \".\",\n    \"/\",\n    \":\",\n    \";\",\n    \"<\",\n    \"=\",\n    \">\",\n    \"?\",\n    \"@\",\n    \"[\",\n    \"\\\\\",\n    \"]\",\n    \"^\",\n    \"_\",\n    \"`\",\n    \"{\",\n    \"|\",\n    \"}\",\n    \"~\"\n  ]\n};\n\nexport default charSets;\n","// need to cover the scenario if all the char options passed are false.\nimport charSets from \"./charSets\";\n\nclass Password {\n  constructor(\n    length = 10,\n    upper = true,\n    lower = true,\n    special = true,\n    nums = true\n  ) {\n    this.options = {\n      upper,\n      lower,\n      special,\n      nums,\n      length\n    };\n    this.value = this.generatePassword();\n  }\n\n  passMinLength() {\n    // Check password length meets min requirement of 6 of more\n    if (this.length >= 6) {\n      return true;\n    }\n    return false;\n  }\n\n  validOptions(upper, lower, nums, special) {\n    //Check is there have been no valid options passed for constructor\n    if (!upper && !lower & !nums && !special) {\n      return false;\n    }\n    return true;\n  }\n\n  generatePassword() {\n    const length = this.options.length;\n    let password = \"\";\n    while (password.length < length) {\n      const char = this.generateX();\n      if (char) {\n        password += char;\n      }\n    }\n    return password;\n  }\n  generateX() {\n    const randomBranch = Math.floor(Math.random() * 4);\n\n    switch (randomBranch) {\n      case 0:\n        if (this.options.nums === true) {\n          return this.num();\n        }\n        break;\n      case 1:\n        if (this.options.upper === true) {\n          return this.upper();\n        }\n        break;\n      case 2:\n        if (this.options.lower === true) {\n          return this.lower();\n        }\n        break;\n      case 3:\n        if (this.options.special === true) {\n          return this.special();\n        }\n        break;\n      default:\n        throw new Error(\"Something went wrong!!\");\n    }\n  }\n  //Takes a set of chars and returns one at random\n  randomFromCharSet(chars) {\n    const random = Math.floor(Math.random() * chars.length);\n    return chars[random];\n  }\n  // Generate a random number\n  num() {\n    const randomNumber = Math.floor(Math.random() * 9);\n    return randomNumber;\n  }\n  // Generate a random lowercase char\n  lower() {\n    const chars = charSets.lower;\n    return this.randomFromCharSet(chars);\n  }\n  // Generate a random uppercase char\n  upper() {\n    const chars = charSets.upper;\n    return this.randomFromCharSet(chars);\n  }\n  // Generate a random special char\n  special() {\n    const chars = charSets.special;\n    return this.randomFromCharSet(chars);\n  }\n}\n\nexport default Password;\n","// JS Imports\nimport React from \"react\";\nimport { Button } from \"primereact/button\";\nimport { InputText } from \"primereact/inputtext\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { Slider } from \"primereact/slider\";\nimport { InputSwitch } from \"primereact/inputswitch\";\n\nimport Password from \"./Password\"; // Password generator logic\n\n// CSS Libraries\nimport \"primereact/resources/themes/nova-light/theme.css\";\nimport \"primereact/resources/primereact.min.css\";\nimport \"primeicons/primeicons.css\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\n\n// Custom CSS\nimport \"./App.scss\";\n\nexport default class App extends React.Component {\n  state = {\n    options: {\n      length: 10,\n      upper: true,\n      lower: true,\n      nums: true,\n      special: true\n    },\n    password: \"\"\n  };\n\n  copyToClip = () => {\n    navigator.clipboard.writeText(this.state.password);\n    toast.success(\"Password copied to clipboard\", {\n      position: \"top-right\",\n      autoClose: 2000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true\n    });\n  };\n\n  handleGenerate = async () => {\n    const { upper, lower, nums, special } = this.state.options;\n    const pwLength = this.state.options.length;\n    const password = new Password(pwLength, upper, lower, special, nums);\n    await this.setState({ password: password.value });\n    this.copyToClip();\n  };\n\n  handleChangeLength = event => {\n    const options = {\n      ...this.state.options\n    };\n    options.length = event.value;\n    this.setState({ options });\n  };\n\n  handleToggle = event => {\n    const options = { ...this.state.options };\n    const control = event.target.id;\n    options[control] = event.target.value;\n    this.setState({ options });\n  };\n\n  disableButton = () => {\n    const { upper, lower, special, nums } = this.state.options;\n    return !upper && !lower && !special & !nums;\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <h1>Secure Password Generator</h1>\n          <InputText value={this.state.password} className=\"password-area\" />\n          <p>Password Length: {this.state.options.length}</p>\n          <Slider\n            value={this.state.options.length}\n            onChange={this.handleChangeLength}\n            className=\"length-slider\"\n            min={8}\n            max={25}\n            step={1}\n          />\n          <div className=\"char-options\">\n            <InputSwitch\n              checked={this.state.options.upper}\n              id=\"upper\"\n              onChange={this.handleToggle}\n            />\n            <span className=\"checbox-label\">Uppercase</span>\n            <InputSwitch\n              checked={this.state.options.lower}\n              id=\"lower\"\n              onChange={this.handleToggle}\n            />\n            <span className=\"checbox-label\">Lowercase</span>\n            <InputSwitch\n              checked={this.state.options.nums}\n              id=\"nums\"\n              onChange={this.handleToggle}\n            />\n            <span className=\"checbox-label\">Numbers</span>\n            <InputSwitch\n              checked={this.state.options.special}\n              id=\"special\"\n              onChange={this.handleToggle}\n            />\n            <span className=\"checbox-label\">Special</span>\n          </div>\n          <Button\n            className=\"password-button\"\n            disabled={this.disableButton()}\n            label=\"Generate Password\"\n            tooltip=\"Make a new password\"\n            data-control=\"special\"\n            onClick={this.handleGenerate}\n          />\n        </div>\n        <ToastContainer\n          position=\"top-right\"\n          autoClose={1000}\n          hideProgressBar\n          newestOnTop={true}\n          closeOnClick\n          rtl={false}\n          pauseOnVisibilityChange\n          draggable\n          pauseOnHover\n        />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}